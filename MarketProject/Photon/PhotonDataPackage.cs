using System.Data;
using System.Text;

namespace MarketProject.Photon
{
    internal class PhotonDataPackage
    {
        internal Dictionary<byte, object?> data = [];

        internal OperationCode operationCode;
        internal EventCode eventCode;

        public PhotonDataPackage(BigEndianReader p, int commandCount)
        {
            Read(p, commandCount);
        }

        private void Read(BigEndianReader p, int commandCount)
        {
            for (int i = 0; i < commandCount; ++i)
            {
                byte id = p.ReadByte();
                byte type = p.ReadByte();

                var value = Decode(p, type);


                if (id == 252)
                {
                    eventCode = (EventCode)(short)value;
                }
                else if (id == 253)
                {
                    operationCode = (OperationCode)(short)value;
                }

                data.Add(id, value);
            }
        }

        internal static object? Decode(BigEndianReader p, byte type)
        {
            int len;
            switch ((Protocol16Type)type)
            {
                case Protocol16Type.Unknown:
                    TODO(p);
                    return null;
                case Protocol16Type.Null:
                    return null;
                case Protocol16Type.Dictionary:
                    return DecodeDictionary(p);
                case Protocol16Type.StringArray:
                    TODO(p);
                    return null;
                case Protocol16Type.Byte:
                    return p.ReadByte();
                case Protocol16Type.Double:
                    return p.ReadDouble();
                case Protocol16Type.EventData:
                    TODO(p);
                    return null;
                case Protocol16Type.Float:
                    return p.ReadFloat();
                case Protocol16Type.Integer:
                    return p.ReadInt32();
                case Protocol16Type.Hashtable:
                    TODO(p);
                    return null;
                case Protocol16Type.Short:
                    return p.ReadInt16();
                case Protocol16Type.Long:
                    return p.ReadInt64();
                case Protocol16Type.IntegerArray:
                    return DeserializeIntegerArray(p);
                case Protocol16Type.Boolean:
                    return p.ReadByte() != 0;
                case Protocol16Type.OperationResponse:
                    TODO(p);
                    return null;
                case Protocol16Type.OperationRequest:
                    TODO(p);
                    return null;
                case Protocol16Type.String:
                    return DeserializeString(p);
                case Protocol16Type.ByteArray:
                    len = (int)p.ReadUInt32();
                    return p.ReadBytes(len).Select(x => (object)x).ToArray();
                case Protocol16Type.Array:
                    return DecodeArray(p);
                case Protocol16Type.ObjectArray:
                    TODO(p);
                    return null;
                case Protocol16Type.EventCode:
                case Protocol16Type.RequestResponseCode:
                case Protocol16Type.TypeUnknownShort:
                    return p.ReadUInt16();

            }

            TODO(p);
            return null;
        }

        private static Dictionary<object, object?> DecodeDictionary(BigEndianReader p)
        {
            Dictionary<object, object?> dict = new();

            byte keyType = p.ReadByte();
            byte valueType = p.ReadByte();
            int len = (int)p.ReadUInt16();

            for (int i = 0; i < len; ++i)
            {
                dict.Add(Decode(p, keyType), Decode(p, valueType));
            }

            return dict;
        }

        private static object?[] DecodeArray(BigEndianReader p)
        {
            int len = p.ReadUInt16();
            byte type = p.ReadByte();

            object?[] objects = new object[len];

            for (int i = 0; i < objects.Length; i++)
            {
                objects[i] = Decode(p, type);
            }

            return objects;
        }

        private static void TODO(BigEndianReader p)
        {
            //byte[] buffer = p.Preview();
            //string packetData = string.Join('-', buffer);
            //Console.WriteLine($"packet: {packetData}");
            //buffer = p.buffer;
            //packetData = BitConverter.ToString(buffer, 0, endPosition);
            //Console.WriteLine($"packet: {packetData}");
        }

        private static object DeserializeString(BigEndianReader p)
        {
            int len = p.ReadUInt16();
            return Encoding.UTF8.GetString(p.ReadBytes(len));
        }

        private static object DeserializeIntegerArray(BigEndianReader p)
        {
            int len = p.ReadUInt16();
            object[] intArray = new object[len];
            for (int i = 0; i < len; ++i)
            {
                intArray[i] = p.ReadInt32();
            }
            return intArray;
        }

        public override bool Equals(object? obj)
        {
            if (obj is not PhotonDataPackage pDP) throw new ArgumentNullException(nameof(obj));

            for (byte i = 252; i < 254; ++i)
            {
                bool x1 = data.ContainsKey(i);
                bool x2 = pDP.data.ContainsKey(i);

                if (x1 != x2) return false;

                if (x1 == true && x2 == true)
                {
                    if ((short)data[i] != (short)pDP.data[i])
                    {
                        return false;
                    }
                }
            }

            return true;
        }

        public override int GetHashCode()
        {
            int hash = 0;
            for (byte i = 252; i < 254; ++i)
            {
                if (data.ContainsKey(i))
                {
                    hash ^= i << 24;
                    hash ^= (short)data[i];
                }
            }
            return hash;
        }
    }

    internal enum Protocol16Type : byte
    {
        Unknown = 0,            // \0
        Null = 42,              // *
        Dictionary = 68,        // D
        StringArray = 97,       // a
        Byte = 98,              // b
        Double = 100,           // d
        EventData = 101,        // e
        Float = 102,            // f
        Integer = 105,          // i
        Hashtable = 104,        // j
        Short = 107,            // k
        Long = 108,             // l
        IntegerArray = 110,     // n
        Boolean = 111,          // o
        OperationResponse = 112,// p
        OperationRequest = 113, // q
        String = 115,           // s
        ByteArray = 120,        // x
        Array = 121,            // y
        ObjectArray = 122,      // z
        EventCode = 252,
        RequestResponseCode = 253,

        TypeUnknownShort = 255,
    }

    internal enum OperationCode
    {
        opUnused,
        opPing,
        opJoin,
        opVersionedOperation,
        opCreateAccount,
        opLogin,
        opCreateGuestAccount,
        opSendCrashLog,
        opSendTraceRoute,
        opSendVfxStats,
        opSendGamePingInfo,
        opCreateCharacter,
        opDeleteCharacter,
        opSelectCharacter,
        opAcceptPopups,
        opRedeemKeycode,
        opGetGameServerByCluster,
        opGetShopPurchaseUrl,
        opGetReferralSeasonDetails,
        opGetReferralLink,
        opGetShopTilesForCategory,
        opMove,
        opAttackStart,
        opCastStart,
        opCastCancel,
        opTerminateToggleSpell,
        opChannelingCancel,
        opAttackBuildingStart,
        opInventoryDestroyItem,
        opInventoryMoveItem,
        opInventoryRecoverItem,
        opInventoryRecoverAllItems,
        opInventorySplitStack,
        opInventorySplitStackInto,
        opGetClusterData,
        opChangeCluster,
        opConsoleCommand,
        opChatMessage,
        opReportClientError,
        opRegisterToObject,
        opUnRegisterFromObject,
        opCraftBuildingChangeSettings,
        opCraftBuildingTakeMoney,
        opRepairBuildingChangeSettings,
        opRepairBuildingTakeMoney,
        opActionBuildingChangeSettings,
        opHarvestStart,
        opHarvestCancel,
        opTakeSilver,
        opActionOnBuildingStart,
        opActionOnBuildingCancel,
        opInstallResourceStart,
        opInstallResourceCancel,
        opInstallSilver,
        opBuildingFillNutrition,
        opBuildingChangeRenovationState,
        opBuildingBuySkin,
        opBuildingClaim,
        opBuildingGiveup,
        opBuildingNutritionSilverStorageDeposit,
        opBuildingNutritionSilverStorageWithdraw,
        opBuildingNutritionSilverRewardSet,
        opConstructionSiteCreate,
        opPlaceableObjectPlace,
        opPlaceableObjectPlaceCancel,
        opPlaceableObjectPickup,
        opFurnitureObjectUse,
        opFarmableHarvest,
        opFarmableFinishGrownItem,
        opFarmableDestroy,
        opFarmableGetProduct,
        opFarmableFill,
        opTearDownConstructionSite,
        opAuctionCreateOffer,
        opAuctionCreateRequest,
        opAuctionGetOffers,
        opAuctionGetRequests,
        opAuctionBuyOffer,
        opAuctionAbortAuction,
        opAuctionModifyAuction,
        opAuctionAbortOffer,
        opAuctionAbortRequest,
        opAuctionSellRequest,
        opAuctionGetFinishedAuctions,
        opAuctionGetFinishedAuctionsCount,
        opAuctionFetchAuction,
        opAuctionGetMyOpenOffers,
        opAuctionGetMyOpenRequests,
        opAuctionGetMyOpenAuctions,
        opAuctionGetItemAverageStats,
        opAuctionGetItemAverageValue,
        opContainerOpen,
        opContainerClose,
        opContainerManageSubContainer,
        opRespawn,
        opSuicide,
        opJoinGuild,
        opLeaveGuild,
        opCreateGuild,
        opInviteToGuild,
        opDeclineGuildInvitation,
        opKickFromGuild,
        opInstantJoinGuild,
        opDuellingChallengePlayer,
        opDuellingAcceptChallenge,
        opDuellingDenyChallenge,
        opChangeClusterTax,
        opClaimTerritory,
        opGiveUpTerritory,
        opChangeTerritoryAccessRights,
        opGetMonolithInfo,
        opGetClaimInfo,
        opGetAttackInfo,
        opGetTerritorySeasonPoints,
        opGetAttackSchedule,
        opGetMatches,
        opGetMatchDetails,
        opJoinMatch,
        opLeaveMatch,
        opChangeChatSettings,
        opLogoutStart,
        opLogoutCancel,
        opClaimOrbStart,
        opClaimOrbCancel,
        opMatchLootChestOpeningStart,
        opMatchLootChestOpeningCancel,
        opDepositToGuildAccount,
        opWithdrawalFromAccount,
        opChangeGuildPayUpkeepFlag,
        opChangeGuildTax,
        opGetMyTerritories,
        opMorganaCommand,
        opGetServerInfo,
        opSubscribeToCluster,
        opAnswerMercenaryInvitation,
        opGetCharacterEquipment,
        opGetCharacterSteamAchievements,
        opGetCharacterStats,
        opGetKillHistoryDetails,
        opLearnMasteryLevel,
        opReSpecAchievement,
        opChangeAvatar,
        opGetRankings,
        opGetRank,
        opGetGvgSeasonRankings,
        opGetGvgSeasonRank,
        opGetGvgSeasonHistoryRankings,
        opGetGvgSeasonGuildMemberHistory,
        opKickFromGvGMatch,
        opGetCrystalLeagueDailySeasonPoints,
        opGetChestLogs,
        opGetAccessRightLogs,
        opGetGuildAccountLogs,
        opGetGuildAccountLogsLargeAmount,
        opInviteToPlayerTrade,
        opPlayerTradeCancel,
        opPlayerTradeInvitationAccept,
        opPlayerTradeAddItem,
        opPlayerTradeRemoveItem,
        opPlayerTradeAcceptTrade,
        opPlayerTradeSetSilverOrGold,
        opSendMiniMapPing,
        opStuck,
        opBuyRealEstate,
        opClaimRealEstate,
        opGiveUpRealEstate,
        opChangeRealEstateOutline,
        opGetMailInfos,
        opGetMailCount,
        opReadMail,
        opSendNewMail,
        opDeleteMail,
        opMarkMailUnread,
        opClaimAttachmentFromMail,
        opApplyToGuild,
        opAnswerGuildApplication,
        opRequestGuildFinderFilteredList,
        opUpdateGuildRecruitmentInfo,
        opRequestGuildRecruitmentInfo,
        opRequestGuildFinderNameSearch,
        opRequestGuildFinderRecommendedList,
        opRegisterChatPeer,
        opSendChatMessage,
        opSendModeratorMessage,
        opJoinChatChannel,
        opLeaveChatChannel,
        opSendWhisperMessage,
        opSay,
        opPlayEmote,
        opStopEmote,
        opGetClusterMapInfo,
        opAccessRightsChangeSettings,
        opMount,
        opMountCancel,
        opBuyJourney,
        opSetSaleStatusForEstate,
        opResolveGuildOrPlayerName,
        opGetRespawnInfos,
        opMakeHome,
        opLeaveHome,
        opResurrectionReply,
        opAllianceCreate,
        opAllianceDisband,
        opAllianceGetMemberInfos,
        opAllianceInvite,
        opAllianceAnswerInvitation,
        opAllianceCancelInvitation,
        opAllianceKickGuild,
        opAllianceLeave,
        opAllianceChangeGoldPaymentFlag,
        opAllianceGetDetailInfo,
        opGetIslandInfos,
        opAbandonMyIsland,
        opBuyMyIsland,
        opBuyGuildIsland,
        opAbandonGuildIsland,
        opUpgradeMyIsland,
        opUpgradeGuildIsland,
        opMoveMyIsland,
        opMoveGuildIsland,
        opTerritoryFillNutrition,
        opTeleportBack,
        opPartyInvitePlayer,
        opPartyRequestJoin,
        opPartyAnswerInvitation,
        opPartyAnswerJoinRequest,
        opPartyLeave,
        opPartyKickPlayer,
        opPartyMakeLeader,
        opPartyChangeLootSetting,
        opPartyMarkObject,
        opPartySetRole,
        opSetGuildCodex,
        opExitEnterStart,
        opExitEnterCancel,
        opQuestGiverRequest,
        opGoldMarketGetBuyOffer,
        opGoldMarketGetBuyOfferFromSilver,
        opGoldMarketGetSellOffer,
        opGoldMarketGetSellOfferFromSilver,
        opGoldMarketBuyGold,
        opGoldMarketSellGold,
        opGoldMarketCreateSellOrder,
        opGoldMarketCreateBuyOrder,
        opGoldMarketGetInfos,
        opGoldMarketCancelOrder,
        opGoldMarketGetAverageInfo,
        opTreasureChestUsingStart,
        opTreasureChestUsingCancel,
        opUseLootChest,
        opUseShrine,
        opUseHellgateShrine,
        opUseSiegeBanner,
        opGetSiegeBannerInfo,
        opLaborerStartJob,
        opLaborerTakeJobLoot,
        opLaborerDismiss,
        opLaborerMove,
        opLaborerBuyItem,
        opLaborerUpgrade,
        opBuyPremium,
        opRealEstateGetAuctionData,
        opRealEstateBidOnAuction,
        opFriendInvite,
        opFriendAnswerInvitation,
        opFriendCancelnvitation,
        opFriendRemove,
        opInventoryStack,
        opInventorySort,
        opInventoryDropAll,
        opInventoryAddToStacks,
        opEquipmentItemChangeSpell,
        opExpeditionRegister,
        opExpeditionRegisterCancel,
        opJoinExpedition,
        opDeclineExpeditionInvitation,
        opVoteStart,
        opVoteDoVote,
        opRatingDoRate,
        opEnteringExpeditionStart,
        opEnteringExpeditionCancel,
        opActivateExpeditionCheckPoint,
        opArenaRegister,
        opArenaAddInvite,
        opArenaRegisterCancel,
        opArenaLeave,
        opJoinArenaMatch,
        opDeclineArenaInvitation,
        opEnteringArenaStart,
        opEnteringArenaCancel,
        opArenaCustomMatch,
        opUpdateCharacterStatement,
        opBoostFarmable,
        opGetStrikeHistory,
        opUseFunction,
        opUsePortalEntrance,
        opResetPortalBinding,
        opQueryPortalBinding,
        opClaimPaymentTransaction,
        opChangeUseFlag,
        opClientPerformanceStats,
        opExtendedHardwareStats,
        opClientLowMemoryWarning,
        opTerritoryClaimStart,
        opTerritoryClaimCancel,
        opDeliverCarriableObjectStart,
        opDeliverCarriableObjectCancel,
        opTerritoryUpgradeWithPowerCrystal,
        opRequestAppStoreProducts,
        opVerifyProductPurchase,
        opQueryGuildPlayerStats,
        opQueryAllianceGuildStats,
        opTrackAchievements,
        opSetAchievementsAutoLearn,
        opDepositItemToGuildCurrency,
        opWithdrawalItemFromGuildCurrency,
        opAuctionSellSpecificItemRequest,
        opFishingStart,
        opFishingCasting,
        opFishingCast,
        opFishingCatch,
        opFishingPull,
        opFishingGiveLine,
        opFishingFinish,
        opFishingCancel,
        opCreateGuildAccessTag,
        opDeleteGuildAccessTag,
        opRenameGuildAccessTag,
        opFlagGuildAccessTagGuildPermission,
        opAssignGuildAccessTag,
        opRemoveGuildAccessTagFromPlayer,
        opModifyGuildAccessTagEditors,
        opRequestPublicAccessTags,
        opChangeAccessTagPublicFlag,
        opUpdateGuildAccessTag,
        opSteamStartMicrotransaction,
        opSteamFinishMicrotransaction,
        opSteamIdHasActiveAccount,
        opCheckEmailAccountState,
        opLinkAccountToSteamId,
        opInAppConfirmPaymentGooglePlay,
        opInAppConfirmPaymentAppleAppStore,
        opInAppPurchaseRequest,
        opInAppPurchaseFailed,
        opCharacterSubscriptionInfo,
        opAccountSubscriptionInfo,
        opBuyGvgSeasonBooster,
        opChangeFlaggingPrepare,
        opOverCharge,
        opOverChargeEnd,
        opRequestTrusted,
        opChangeGuildLogo,
        opPartyFinderRegisterForUpdates,
        opPartyFinderUnregisterForUpdates,
        opPartyFinderEnlistNewPartySearch,
        opPartyFinderDeletePartySearch,
        opPartyFinderChangePartySearch,
        opPartyFinderChangeRole,
        opPartyFinderApplyForGroup,
        opPartyFinderAcceptOrDeclineApplyForGroup,
        opPartyFinderGetEquipmentSnapshot,
        opPartyFinderRegisterApplicants,
        opPartyFinderUnregisterApplicants,
        opPartyFinderFulltextSearch,
        opPartyFinderRequestEquipmentSnapshot,
        opGetPersonalSeasonTrackerData,
        opGetPersonalSeasonPastRewardData,
        opUseConsumableFromInventory,
        opClaimPersonalSeasonReward,
        opEasyAntiCheatMessageToServer,
        opXignCodeMessageToServer,
        opBattlEyeMessageToServer,
        opSetNextTutorialState,
        opAddPlayerToMuteList,
        opRemovePlayerFromMuteList,
        opProductShopUserEvent,
        opGetVanityUnlocks,
        opBuyVanityUnlocks,
        opGetMountSkins,
        opSetMountSkin,
        opSetWardrobe,
        opChangeCustomization,
        opChangePlayerIslandData,
        opGetGuildChallengePoints,
        opSmartQueueJoin,
        opSmartQueueLeave,
        opSmartQueueSelectSpawnCluster,
        opUpgradeHideout,
        opInitHideoutAttackStart,
        opInitHideoutAttackCancel,
        opHideoutFillNutrition,
        opHideoutGetInfo,
        opHideoutGetOwnerInfo,
        opHideoutSetTribute,
        opHideoutUpgradeWithPowerCrystal,
        opHideoutDeclareHQ,
        opHideoutUndeclareHQ,
        opHideoutGetHQRequirements,
        opHideoutBoost,
        opHideoutBoostConstruction,
        opOpenWorldAttackScheduleStart,
        opOpenWorldAttackScheduleCancel,
        opOpenWorldAttackConquerStart,
        opOpenWorldAttackConquerCancel,
        opGetOpenWorldAttackDetails,
        opGetNextOpenWorldAttackScheduleTime,
        opRecoverVaultFromHideout,
        opGetGuildEnergyDrainInfo,
        opChannelingUpdate,
        opUseCorruptedShrine,
        opRequestEstimatedMarketValue,
        opLogFeedback,
        opGetInfamyInfo,
        opGetPartySmartClusterQueuePriority,
        opSetPartySmartClusterQueuePriority,
        opClientAntiAutoClickerInfo,
        opClientBotPatternDetectionInfo,
        opClientAntiGatherClickerInfo,
        opLoadoutCreate,
        opLoadoutRead,
        opLoadoutReadHeaders,
        opLoadoutUpdate,
        opLoadoutDelete,
        opLoadoutOrderUpdate,
        opLoadoutEquip,
        opBatchUseItemCancel,
        opEnlistFactionWarfare,
        opGetFactionWarfareWeeklyReport,
        opClaimFactionWarfareWeeklyReport,
        opGetFactionWarfareCampaignData,
        opClaimFactionWarfareItemReward,
        opSendMemoryConsumption,
        opPickupCarriableObjectStart,
        opPickupCarriableObjectCancel,
        opSetSavingChestLogsFlag,
        opGetSavingChestLogsFlag,
        opRegisterGuestAccount,
        opResendGuestAccountVerificationEmail,
        opDoSimpleActionStart,
        opDoSimpleActionCancel,
        opGetGvgSeasonContributionByActivity,
        opGetGvgSeasonContributionByCrystalLeague,
        opGetGuildMightCategoryContribution,
        opGetGuildMightCategoryOverview,
        opGetPvpChallengeData,
        opClaimPvpChallengeWeeklyReward,
        opGetPersonalMightStats,
        opAuctionGetLoadoutOffers,
        opAuctionBuyLoadoutOffer,
        opAccountDeletionRequest,
        opAccountReactivationRequest,
        opGetModerationEscalationDefiniton,
        opEventBasedPopupAddSeen,
        opGetItemKillHistory,
        opGetVanityConsumables,
        opEquipKillEmote,
        opChangeKillEmotePlayOnKnockdownSetting,
        opBuyVanityConsumableCharges,
        opReclaimVanityItem,
        opGetArenaRankings,
        opGetCrystalLeagueStatistics,
        opSendOptionsLog,
        opSendControlsOptionsLog,
        opMistsUseImmediateReturnExit,
        opMistsUseStaticEntrance,
        opMistsUseCityRoadsEntrance,
        opChangeNewGuildMemberMail,
        opGetNewGuildMemberMail,
        opChangeGuildFactionAllegiance,
        opGetGuildFactionAllegiance,
        opGuildBannerChange,
        opGuildGetOptionalStats,
        opGuildSetOptionalStats,
        opGetPlayerInfoForStalk,
        opPayGoldForCharacterTypeChange,
        opQuickSellAuctionQueryAction,
        opQuickSellAuctionSellAction,
        opFcmTokenToServer,
        opApnsTokenToServer,
        opDeathRecap,
        opAuctionFetchFinishedAuctions,
        opAbortAuctionFetchFinishedAuctions,
        opRequestLegendaryEvenHistory,
        opPartyAnswerStartHuntRequest,
        opHuntAbort,
        opUseFindTrackSpellFromItemPrepare,
        opInteractWithTrackStart,
        opInteractWithTrackCancel,
        opTerritoryRaidStart,
        opTerritoryRaidCancel,
        opTerritoryClaimRaidedRawEnergyCrystalResult,
        opGvGSeasonPlayerGuildParticipationDetails,
        opDailyMightBonus,
        opClaimDailyMightBonus,
        opGetFortificationGroupInfo,
        opUpgradeFortificationGroup
    }

    internal enum EventCode
    {
        evUnused,
        evLeave,
        evJoinFinished,
        evMove,
        evTeleport,
        evChangeEquipment,
        evHealthUpdate,
        evEnergyUpdate,
        evDamageShieldUpdate,
        evCraftingFocusUpdate,
        evActiveSpellEffectsUpdate,
        evResetCooldowns,
        evAttack,
        evCastStart,
        evChannelingUpdate,
        evCastCancel,
        evCastTimeUpdate,
        evCastFinished,
        evCastSpell,
        evCastSpells,
        evCastHit,
        evCastHits,
        evStoredTargetsUpdate,
        evChannelingEnded,
        evAttackBuilding,
        evInventoryPutItem,
        evInventoryDeleteItem,
        evNewCharacter,
        evNewEquipmentItem,
        evNewSiegeBannerItem,
        evNewSimpleItem,
        evNewFurnitureItem,
        evNewKillTrophyItem,
        evNewJournalItem,
        evNewLaborerItem,
        evNewEquipmentItemLegendarySoul,
        evNewSimpleHarvestableObject,
        evNewSimpleHarvestableObjectList,
        evNewHarvestableObject,
        evNewTreasureDestinationObject,
        evTreasureDestinationObjectStatus,
        evCloseTreasureDestinationObject,
        evNewSilverObject,
        evNewBuilding,
        evHarvestableChangeState,
        evMobChangeState,
        evFactionBuildingInfo,
        evCraftBuildingInfo,
        evRepairBuildingInfo,
        evMeldBuildingInfo,
        evConstructionSiteInfo,
        evPlayerBuildingInfo,
        evFarmBuildingInfo,
        evTutorialBuildingInfo,
        evLaborerObjectInfo,
        evLaborerObjectJobInfo,
        evMarketPlaceBuildingInfo,
        evHarvestStart,
        evHarvestCancel,
        evHarvestFinished,
        evTakeSilver,
        evActionOnBuildingStart,
        evActionOnBuildingCancel,
        evActionOnBuildingFinished,
        evItemRerollQualityFinished,
        evInstallResourceStart,
        evInstallResourceCancel,
        evInstallResourceFinished,
        evCraftItemFinished,
        evLogoutCancel,
        evChatMessage,
        evChatSay,
        evChatWhisper,
        evChatMuted,
        evPlayEmote,
        evStopEmote,
        evSystemMessage,
        evUtilityTextMessage,
        evUpdateMoney,
        evUpdateFame,
        evUpdateLearningPoints,
        evUpdateReSpecPoints,
        evUpdateCurrency,
        evUpdateFactionStanding,
        evUpdateMistCityStanding,
        evRespawn,
        evServerDebugLog,
        evCharacterEquipmentChanged,
        evRegenerationHealthChanged,
        evRegenerationEnergyChanged,
        evRegenerationMountHealthChanged,
        evRegenerationCraftingChanged,
        evRegenerationHealthEnergyComboChanged,
        evRegenerationPlayerComboChanged,
        evDurabilityChanged,
        evNewLoot,
        evAttachItemContainer,
        evDetachItemContainer,
        evInvalidateItemContainer,
        evLockItemContainer,
        evGuildUpdate,
        evGuildPlayerUpdated,
        evInvitedToGuild,
        evGuildMemberWorldUpdate,
        evUpdateMatchDetails,
        evObjectEvent,
        evNewMonolithObject,
        evNewOrbObject,
        evNewCastleObject,
        evNewSpellEffectArea,
        evUpdateSpellEffectArea,
        evNewChainSpell,
        evUpdateChainSpell,
        evNewTreasureChest,
        evStartMatch,
        evStartArenaMatchInfos,
        evEndArenaMatch,
        evMatchUpdate,
        evActiveMatchUpdate,
        evNewMob,
        evDebugMobInfo,
        evDebugVariablesInfo,
        evDebugReputationInfo,
        evDebugDiminishingReturnInfo,
        evDebugSmartClusterQueueInfo,
        evClaimOrbStart,
        evClaimOrbFinished,
        evClaimOrbCancel,
        evOrbUpdate,
        evOrbClaimed,
        evOrbReset,
        evNewWarCampObject,
        evNewMatchLootChestObject,
        evNewArenaExit,
        evGuildMemberTerritoryUpdate,
        evInvitedMercenaryToMatch,
        evClusterInfoUpdate,
        evForcedMovement,
        evForcedMovementCancel,
        evCharacterStats,
        evCharacterStatsKillHistory,
        evCharacterStatsDeathHistory,
        evGuildStats,
        evKillHistoryDetails,
        evFullAchievementInfo,
        evFinishedAchievement,
        evAchievementProgressInfo,
        evFullAchievementProgressInfo,
        evFullTrackedAchievementInfo,
        evFullAutoLearnAchievementInfo,
        evQuestGiverQuestOffered,
        evQuestGiverDebugInfo,
        evConsoleEvent,
        evTimeSync,
        evChangeAvatar,
        evChangeMountSkin,
        evGameEvent,
        evKilledPlayer,
        evDied,
        evKnockedDown,
        evUnconcious,
        evMatchPlayerJoinedEvent,
        evMatchPlayerStatsEvent,
        evMatchPlayerStatsCompleteEvent,
        evMatchTimeLineEventEvent,
        evMatchPlayerMainGearStatsEvent,
        evMatchPlayerChangedAvatarEvent,
        evInvitationPlayerTrade,
        evPlayerTradeStart,
        evPlayerTradeCancel,
        evPlayerTradeUpdate,
        evPlayerTradeFinished,
        evPlayerTradeAcceptChange,
        evMiniMapPing,
        evMarketPlaceNotification,
        evDuellingChallengePlayer,
        evNewDuellingPost,
        evDuelStarted,
        evDuelEnded,
        evDuelDenied,
        evDuelRequestCanceled,
        evDuelLeftArea,
        evDuelReEnteredArea,
        evNewRealEstate,
        evMiniMapOwnedBuildingsPositions,
        evRealEstateListUpdate,
        evGuildLogoUpdate,
        evGuildLogoChanged,
        evPlaceableObjectPlace,
        evPlaceableObjectPlaceCancel,
        evFurnitureObjectBuffProviderInfo,
        evFurnitureObjectCheatProviderInfo,
        evFarmableObjectInfo,
        evNewUnreadMails,
        evMailOperationPossible,
        evGuildLogoObjectUpdate,
        evStartLogout,
        evNewChatChannels,
        evJoinedChatChannel,
        evLeftChatChannel,
        evRemovedChatChannel,
        evAccessStatus,
        evMounted,
        evMountStart,
        evMountCancel,
        evNewTravelpoint,
        evNewIslandAccessPoint,
        evNewExit,
        evUpdateHome,
        evUpdateChatSettings,
        evResurrectionOffer,
        evResurrectionReply,
        evLootEquipmentChanged,
        evUpdateUnlockedGuildLogos,
        evUpdateUnlockedAvatars,
        evUpdateUnlockedAvatarRings,
        evUpdateUnlockedBuildings,
        evNewIslandManagement,
        evNewTeleportStone,
        evCloak,
        evPartyInvitation,
        evPartyJoinRequest,
        evPartyJoined,
        evPartyDisbanded,
        evPartyPlayerJoined,
        evPartyChangedOrder,
        evPartyPlayerLeft,
        evPartyLeaderChanged,
        evPartyLootSettingChangedPlayer,
        evPartySilverGained,
        evPartyPlayerUpdated,
        evPartyInvitationAnswer,
        evPartyJoinRequestAnswer,
        evPartyMarkedObjectsUpdated,
        evPartyOnClusterPartyJoined,
        evPartySetRoleFlag,
        evPartyInviteOrJoinPlayerEquipmentInfo,
        evSpellCooldownUpdate,
        evNewHellgateExitPortal,
        evNewExpeditionExit,
        evNewExpeditionNarrator,
        evExitEnterStart,
        evExitEnterCancel,
        evExitEnterFinished,
        evNewQuestGiverObject,
        evFullQuestInfo,
        evQuestProgressInfo,
        evQuestGiverInfoForPlayer,
        evFullExpeditionInfo,
        evExpeditionQuestProgressInfo,
        evInvitedToExpedition,
        evExpeditionRegistrationInfo,
        evEnteringExpeditionStart,
        evEnteringExpeditionCancel,
        evRewardGranted,
        evArenaRegistrationInfo,
        evEnteringArenaStart,
        evEnteringArenaCancel,
        evEnteringArenaLockStart,
        evEnteringArenaLockCancel,
        evInvitedToArenaMatch,
        evUsingHellgateShrine,
        evEnteringHellgateLockStart,
        evEnteringHellgateLockCancel,
        evPlayerCounts,
        evInCombatStateUpdate,
        evOtherGrabbedLoot,
        evTreasureChestUsingStart,
        evTreasureChestUsingFinished,
        evTreasureChestUsingCancel,
        evTreasureChestUsingOpeningComplete,
        evTreasureChestForceCloseInventory,
        evLocalTreasuresUpdate,
        evLootChestSpawnpointsUpdate,
        evPremiumChanged,
        evPremiumExtended,
        evPremiumLifeTimeRewardGained,
        evGoldPurchased,
        evLaborerGotUpgraded,
        evJournalGotFull,
        evJournalFillError,
        evFriendRequest,
        evFriendRequestInfos,
        evFriendInfos,
        evFriendRequestAnswered,
        evFriendOnlineStatus,
        evFriendRequestCanceled,
        evFriendRemoved,
        evFriendUpdated,
        evPartyLootItems,
        evPartyLootItemsRemoved,
        evReputationUpdate,
        evDefenseUnitAttackBegin,
        evDefenseUnitAttackEnd,
        evDefenseUnitAttackDamage,
        evUnrestrictedPvpZoneUpdate,
        evReputationImplicationUpdate,
        evNewMountObject,
        evMountHealthUpdate,
        evMountCooldownUpdate,
        evNewExpeditionAgent,
        evNewExpeditionCheckPoint,
        evExpeditionStartEvent,
        evVoteEvent,
        evRatingEvent,
        evNewArenaAgent,
        evBoostFarmable,
        evUseFunction,
        evNewPortalEntrance,
        evNewPortalExit,
        evNewRandomDungeonExit,
        evWaitingQueueUpdate,
        evPlayerMovementRateUpdate,
        evObserveStart,
        evMinimapZergs,
        evMinimapSmartClusterZergs,
        evPaymentTransactions,
        evPerformanceStatsUpdate,
        evOverloadModeUpdate,
        evDebugDrawEvent,
        evRecordCameraMove,
        evRecordStart,
        evDeliverCarriableObjectStart,
        evDeliverCarriableObjectCancel,
        evDeliverCarriableObjectReset,
        evDeliverCarriableObjectFinished,
        evTerritoryClaimStart,
        evTerritoryClaimCancel,
        evTerritoryClaimFinished,
        evTerritoryScheduleResult,
        evTerritoryUpgradeWithPowerCrystalResult,
        evReceiveCarriableObjectStart,
        evReceiveCarriableObjectFinished,
        evUpdateAccountState,
        evStartDeterministicRoam,
        evGuildFullAccessTagsUpdated,
        evGuildAccessTagUpdated,
        evGvgSeasonUpdate,
        evGvgSeasonCheatCommand,
        evSeasonPointsByKillingBooster,
        evFishingStart,
        evFishingCast,
        evFishingCatch,
        evFishingFinished,
        evFishingCancel,
        evNewFloatObject,
        evNewFishingZoneObject,
        evFishingMiniGame,
        evAlbionJournalAchievementCompleted,
        evUpdatePuppet,
        evChangeFlaggingFinished,
        evNewOutpostObject,
        evOutpostUpdate,
        evOutpostClaimed,
        evOverChargeEnd,
        evOverChargeStatus,
        evPartyFinderFullUpdate,
        evPartyFinderUpdate,
        evPartyFinderApplicantsUpdate,
        evPartyFinderEquipmentSnapshot,
        evPartyFinderJoinRequestDeclined,
        evNewUnlockedPersonalSeasonRewards,
        evPersonalSeasonPointsGained,
        evPersonalSeasonPastSeasonDataEvent,
        evEasyAntiCheatMessageToClient,
        evMatchLootChestOpeningStart,
        evMatchLootChestOpeningFinished,
        evMatchLootChestOpeningCancel,
        evNotifyCrystalMatchReward,
        evCrystalRealmFeedback,
        evNewLocationMarker,
        evNewTutorialBlocker,
        evNewTileSwitch,
        evNewInformationProvider,
        evNewDynamicGuildLogo,
        evNewDecoration,
        evTutorialUpdate,
        evTriggerHintBox,
        evRandomDungeonPositionInfo,
        evNewLootChest,
        evUpdateLootChest,
        evLootChestOpened,
        evUpdateLootProtectedByMobsWithMinimapDisplay,
        evNewShrine,
        evUpdateShrine,
        evUpdateRoom,
        evNewMistDungeonRoomMobSoul,
        evNewHellgateShrine,
        evUpdateHellgateShrine,
        evActivateHellgateExit,
        evMutePlayerUpdate,
        evShopTileUpdate,
        evShopUpdate,
        evAntiCheatKick,
        evBattlEyeServerMessage,
        evUnlockVanityUnlock,
        evAvatarUnlocked,
        evCustomizationChanged,
        evBaseVaultInfo,
        evGuildVaultInfo,
        evBankVaultInfo,
        evRecoveryVaultPlayerInfo,
        evRecoveryVaultGuildInfo,
        evUpdateWardrobe,
        evCastlePhaseChanged,
        evGuildAccountLogEvent,
        evNewHideoutObject,
        evNewHideoutManagement,
        evNewHideoutExit,
        evInitHideoutAttackStart,
        evInitHideoutAttackCancel,
        evInitHideoutAttackFinished,
        evHideoutManagementUpdate,
        evHideoutUpgradeWithPowerCrystalResult,
        evIpChanged,
        evSmartClusterQueueUpdateInfo,
        evSmartClusterQueueActiveInfo,
        evSmartClusterQueueKickWarning,
        evSmartClusterQueueInvite,
        evReceivedGvgSeasonPoints,
        evTowerPowerPointUpdate,
        evOpenWorldAttackScheduleStart,
        evOpenWorldAttackScheduleFinished,
        evOpenWorldAttackScheduleCancel,
        evOpenWorldAttackConquerStart,
        evOpenWorldAttackConquerFinished,
        evOpenWorldAttackConquerCancel,
        evOpenWorldAttackConquerStatus,
        evOpenWorldAttackStart,
        evOpenWorldAttackEnd,
        evNewRandomResourceBlocker,
        evNewHomeObject,
        evHideoutObjectUpdate,
        evUpdateInfamy,
        evMinimapPositionMarkers,
        evNewTunnelExit,
        evCorruptedDungeonUpdate,
        evCorruptedDungeonStatus,
        evCorruptedDungeonInfamy,
        evHellgateRestrictedAreaUpdate,
        evHellgateInfamy,
        evHellgateStatus,
        evHellgateStatusUpdate,
        evHellgateSuspense,
        evReplaceSpellSlotWithMultiSpell,
        evNewCorruptedShrine,
        evUpdateCorruptedShrine,
        evCorruptedShrineUsageStart,
        evCorruptedShrineUsageCancel,
        evExitUsed,
        evLinkedToObject,
        evLinkToObjectBroken,
        evEstimatedMarketValueUpdate,
        evStuckCancel,
        evDungonEscapeReady,
        evFactionWarfareClusterState,
        evFactionWarfareHasUnclaimedWeeklyReportsEvent,
        evSimpleFeedback,
        evSmartClusterQueueSkipClusterError,
        evXignCodeEvent,
        evBatchUseItemStart,
        evBatchUseItemEnd,
        evRedZoneEventClusterStatus,
        evRedZonePlayerNotification,
        evRedZoneWorldEvent,
        evFactionWarfareStats,
        evUpdateFactionBalanceFactors,
        evFactionEnlistmentChanged,
        evUpdateFactionRank,
        evFactionWarfareCampaignRewardsUnlocked,
        evFeaturedFeatureUpdate,
        evNewCarriableObject,
        evMinimapCrystalPositionMarker,
        evCarriedObjectUpdate,
        evPickupCarriableObjectStart,
        evPickupCarriableObjectCancel,
        evPickupCarriableObjectFinished,
        evDoSimpleActionStart,
        evDoSimpleActionCancel,
        evDoSimpleActionFinished,
        evNotifyGuestAccountVerified,
        evMightAndFavorReceivedEvent,
        evWeeklyPvpChallengeRewardStateUpdate,
        evNewUnlockedPvpSeasonChallengeRewards,
        evStaticDungeonEntrancesDungeonEventStatusUpdates,
        evStaticDungeonDungeonValueUpdate,
        evStaticDungeonEntranceDungeonEventsAborted,
        evInAppPurchaseConfirmedGooglePlay,
        evFeatureSwitchInfo,
        evPartyJoinRequestAborted,
        evPartyInviteAborted,
        evPartyStartHuntRequest,
        evPartyStartHuntRequested,
        evPartyStartHuntRequestAnswer,
        evGuildInviteDeclined,
        evCancelMultiSpellSlots,
        evNewVisualEventObject,
        evCastleClaimProgress,
        evCastleClaimProgressLogo,
        evTownPortalUpdateState,
        evTownPortalFailed,
        evConsumableVanityChargesAdded,
        evFestivitiesUpdate,
        evNewBannerObject,
        evNewMistsImmediateReturnExit,
        evMistsPlayerJoinedInfo,
        evNewMistsStaticEntrance,
        evNewMistsOpenWorldExit,
        evNewTunnelExitTemp,
        evNewMistsWispSpawn,
        evMistsWispSpawnStateChange,
        evNewMistsCityEntrance,
        evNewMistsCityRoadsEntrance,
        evMistsCityRoadsEntrancePartyStateUpdate,
        evMistsCityRoadsEntranceClearStateForParty,
        evMistsEntranceDataChanged,
        evNewMistsCagedWisp,
        evMistsWispCageOpened,
        evMistsEntrancePartyBindingCreated,
        evMistsEntrancePartyBindingCleared,
        evMistsEntrancePartyBindingInfos,
        evNewMistsBorderExit,
        evNewMistsDungeonExit,
        evLocalQuestInfos,
        evLocalQuestStarted,
        evLocalQuestActive,
        evLocalQuestInactive,
        evLocalQuestProgressUpdate,
        evNewUnrestrictedPvpZone,
        evTemporaryFlaggingStatusUpdate,
        evSpellTestPerformanceUpdate,
        evTransformation,
        evTransformationEnd,
        evUpdateTrustlevel,
        evRevealHiddenTimeStamps,
        evModifyItemTraitFinished,
        evRerollItemTraitValueFinished,
        evHuntQuestProgressInfo,
        evHuntStarted,
        evHuntFinished,
        evHuntAborted,
        evHuntMissionStepStateUpdate,
        evNewHuntTrack,
        evHuntMissionUpdate,
        evHuntQuestMissionProgressUpdate,
        evHuntTrackUsed,
        evHuntTrackUseableAgain,
        evMinimapHuntTrackMarkers,
        evNoTracksFound,
        evHuntQuestAborted,
        evInteractWithTrackStart,
        evInteractWithTrackCancel,
        evInteractWithTrackFinished,
        evNewDynamicCompound,
        evLegendaryItemDestroyed,
        evAttunementInfo,
        evTerritoryClaimRaidedRawEnergyCrystalResult,
        evCarriedObjectExpiryWarning,
        evCarriedObjectExpired,
        evTerritoryRaidStart,
        evTerritoryRaidCancel,
        evTerritoryRaidFinished,
        evTerritoryRaidResult,
        evTerritoryMonolithActiveRaidStatus,
        evTerritoryMonolithActiveRaidCancelled,
        evMonolithEnergyStorageUpdate,
        evMonolithNextScheduledOpenWorldAttackUpdate,
        evMonolithProtectedBuildingsDamageReductionUpdate,
        evNewBuildingBaseEvent,
        evNewFortificationBuilding,
        evNewCastleGateBuilding,
        evBuildingDurabilityUpdate,
        evMonolithFortificationPointsUpdate,
        evFortificationBuildingUpgradeInfo,
        evFortificationBuildingsDamageStateUpdate,
        evUpdateEnemyWarBannerActive,
        evTerritoryAnnouncePlayerEjection
    }
}
